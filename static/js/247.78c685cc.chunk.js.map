{"version":3,"file":"static/js/247.78c685cc.chunk.js","mappings":"oPAmDA,UA5Ca,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCD,GAAa,GADd,mBAGsBE,EAAAA,EAAAA,IAAcV,GAHpC,OAGSW,EAHT,OAIGP,EAAQO,GAJX,gDAMGL,EAAS,EAAD,IANX,yBAQGE,GAAa,GARhB,2EAAD,EAWD,GAAE,CAACR,KAGF,iBAAKY,UAAU,WAAf,WACE,eAAIA,UAAU,aAAd,kBACCT,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAA1B,OACR,gBAAkBJ,UAAU,YAA5B,WACE,gBACEK,IACEF,EACIG,EAAAA,EAAeH,EACfI,EAAQ,KAEdC,IAAI,GACJC,MAAM,QAGPL,IAXMF,EADD,IAeTP,IAAa,SAAC,IAAD,IACbF,GAASiB,EAAAA,GAAAA,MAAY,+DAG3B,C,+LC/CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,2GAC3BC,EAD2B,oDAE3BC,EAF2B,gCAIRJ,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,GAAUG,GAJpC,cAIrBC,EAJqB,yBAKpBA,EAAKjB,MALe,2CAAH,qDAQbkB,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,uFACZJ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBH,GAH6B,cACzBC,EADyB,yBAKxBA,EAAKjB,MALmB,2CAAH,wDAQjBoB,EAAkB,mCAAG,WAAO/B,GAAP,8FAAWgC,EAAX,+BAA4B,GAAIL,EAAhC,gCACbJ,EAAAA,EAAAA,IAAA,gBACRvB,GADQ,OACHgC,EADG,oBACuBR,EADvB,mBAEjBG,GAH8B,cAC1BC,EAD0B,yBAKzBA,EAAKjB,MALoB,2CAAH,sDAQlBD,EAAa,mCAAG,WAAMuB,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADQ,cACrBI,EADqB,yBAIpBA,EAAKjB,KAAKR,MAJU,2CAAH,sDAOb+B,EAAgB,mCAAG,WAAMD,GAAN,uFACXV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADW,cACxBI,EADwB,yBAIvBA,EAAKjB,KAAKwB,SAJa,2CAAH,qD,sDCpCtB,IAAMjB,EAAe,iC","sources":["components/Cast/Cast.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchCastInfo } from '../../services/apiService';\nimport { useParams } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchCastInfo(id);\n        setCast(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [id]);\n\n  return (\n    <div className=\"Cast_box\">\n      <h1 className=\"Cast_title\">Cast</h1>\n      {cast.map(({ cast_id, profile_path, name }) => (\n        <li key={cast_id} className=\"Cast_card\">\n          <img\n            src={\n              profile_path\n                ? BASE_IMG_URL + profile_path\n                : require('img/smile.jpg')\n            }\n            alt=\"\"\n            width=\"200\"\n          />\n\n          {name}\n        </li>\n      ))}\n      {isLoading && <Loader />}\n      {error && toast.error('Подождите...')}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3f22dcea9933d1a88e76ca43d3c13944';\n\nexport const fetchDayTrend = async (\n  endpoints = `trending/movie/day`,\n  options\n) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["id","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","fetchCastInfo","data","className","map","cast_id","profile_path","name","src","BASE_IMG_URL","require","alt","width","toast","axios","apiKey","fetchDayTrend","endpoints","options","resp","fetchMovieByQuery","query","fetchMovieDetsById","detailEndpoint","movieId","fetchReviewsInfo","results"],"sourceRoot":""}