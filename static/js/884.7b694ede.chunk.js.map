{"version":3,"file":"static/js/884.7b694ede.chunk.js","mappings":"+MAgEA,UArDqB,WACnB,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBP,GAAIQ,MAAK,SAAAC,GAC1BV,EAAaU,EACd,GACF,GAAE,CAACT,IAMJ,OAAKF,GAQH,iBACEY,MAAO,CACLC,QAAS,OACTC,cAAe,UAHnB,WAME,0CACA,mBACEC,QApBe,WACnBT,EAASF,EAASY,MAAMC,KACzB,EAmBKL,MAAO,CACLC,QAAS,OACTK,MAAO,KACPC,YAAa,QALjB,sBAUA,gBAAKC,IAAKC,EAAAA,EAAerB,EAAUsB,YAAaC,IAAI,GAAGL,MAAM,SAC7D,SAAC,KAAD,CAASM,GAAG,OAAOR,MAAO,CAAEC,KAAMb,EAASY,MAAMC,MAAjD,mBAGA,SAAC,KAAD,CAASO,GAAG,UAAUR,MAAO,CAAEC,KAAMb,EAASY,MAAMC,MAApD,sBAGA,SAAC,KAAD,QA9BA,0BACE,6CAgCP,C,+LC5DDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,2GAC3BC,EAD2B,oDAE3BC,EAF2B,gCAIRJ,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,GAAUG,GAJpC,cAIrBlB,EAJqB,yBAKpBA,EAAKmB,MALe,2CAAH,qDAQbC,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,uFACZJ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBH,GAH6B,cACzBlB,EADyB,yBAKxBA,EAAKmB,MALmB,2CAAH,wDAQjBrB,EAAkB,mCAAG,WAAOP,GAAP,8FAAW+B,EAAX,+BAA4B,GAAIJ,EAAhC,gCACbJ,EAAAA,EAAAA,IAAA,gBACRvB,GADQ,OACH+B,EADG,oBACuBP,EADvB,mBAEjBG,GAH8B,cAC1BlB,EAD0B,yBAKzBA,EAAKmB,MALoB,2CAAH,sDAQlBI,EAAa,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADQ,cACrBf,EADqB,yBAIpBA,EAAKmB,KAAKM,MAJU,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACXV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,2BADW,cACxBf,EADwB,yBAIvBA,EAAKmB,KAAKQ,SAJa,2CAAH,qD,sDCpCtB,IAAMjB,EAAe,iC","sources":["pages/MovieDetails.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchMovieDetsById } from 'services/apiService';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { BASE_IMG_URL } from 'services/constants';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieDetsById(id).then(resp => {\n      setMovieData(resp);\n    });\n  }, [id]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  if (!movieData) {\n    return (\n      <div>\n        <h1>Loadind data...</h1>\n      </div>\n    );\n  }\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <h1>MovieDetalis</h1>\n      <button\n        onClick={handleGoBack}\n        style={{\n          display: 'flex',\n          width: '50',\n          marginRight: 'auto',\n        }}\n      >\n        go back\n      </button>\n      <img src={BASE_IMG_URL + movieData.poster_path} alt=\"\" width=\"400\" />\n      <NavLink to=\"cast\" state={{ from: location.state.from }}>\n        cast\n      </NavLink>\n      <NavLink to=\"reviews\" state={{ from: location.state.from }}>\n        reviews\n      </NavLink>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3f22dcea9933d1a88e76ca43d3c13944';\n\nexport const fetchDayTrend = async (\n  endpoints = `trending/movie/day`,\n  options\n) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","movieData","setMovieData","id","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetsById","then","resp","style","display","flexDirection","onClick","state","from","width","marginRight","src","BASE_IMG_URL","poster_path","alt","to","axios","apiKey","fetchDayTrend","endpoints","options","data","fetchMovieByQuery","query","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo","results"],"sourceRoot":""}