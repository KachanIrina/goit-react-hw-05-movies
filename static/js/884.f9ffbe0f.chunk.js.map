{"version":3,"file":"static/js/884.f9ffbe0f.chunk.js","mappings":"4PA6FA,UAhFqB,WACnB,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCR,EAAAA,EAAAA,WAAS,GAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KACA,GAA0BV,EAAAA,EAAAA,UAAS,IAAnC,eAAOW,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,2FACCH,GAAa,GADd,mBAGsBI,EAAAA,EAAAA,IAAmBX,GAHzC,OAGSY,EAHT,OAIGb,EAAaa,GACbC,QAAQC,IAAIF,GALf,gDAOGH,EAAS,EAAD,IAPX,yBASGF,GAAa,GAThB,2EAAD,EAYD,GAAE,CAACP,IAMJ,OAAKF,GAQH,iBACEiB,MAAO,CACLC,QAAS,OACTC,cAAe,UAHnB,WAME,mBACEC,QAnBe,WACnBd,EAASF,EAASiB,MAAMC,KACzB,EAkBKL,MAAO,CACLC,QAAS,OACTK,MAAO,KACPC,YAAa,QALjB,sBAWA,gBACEC,IACEzB,EAAU0B,YACNC,EAAAA,EAAe3B,EAAU0B,YACzBE,EAAQ,KAEdC,IAAI,GACJN,MAAM,SAGR,oDACA,SAAC,KAAD,CACEO,GAAG,OACHT,MAAO,CAAEC,KAAMlB,EAASiB,MAAMC,MAC9BL,MAAO,CAAEc,WAAY,MAHvB,mBAOA,SAAC,KAAD,CAASD,GAAG,UAAUT,MAAO,CAAEC,KAAMlB,EAASiB,MAAMC,MAApD,sBAGA,SAAC,KAAD,IACCd,IAAa,SAAC,IAAD,IACbE,GAASsB,EAAAA,GAAAA,MAAY,iEA9CtB,0BACE,6CAgDP,C,+LCzFDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,2GAC3BC,EAD2B,oDAE3BC,EAF2B,gCAIRJ,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,GAAUG,GAJpC,cAIrBC,EAJqB,yBAKpBA,EAAKxB,MALe,2CAAH,qDAQbyB,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,uFACZJ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBH,GAH6B,cACzBC,EADyB,yBAKxBA,EAAKxB,MALmB,2CAAH,wDAQjBD,EAAkB,mCAAG,WAAOX,GAAP,8FAAWuC,EAAX,+BAA4B,GAAIJ,EAAhC,gCACbJ,EAAAA,EAAAA,IAAA,gBACR/B,GADQ,OACHuC,EADG,oBACuBP,EADvB,mBAEjBG,GAH8B,cAC1BC,EAD0B,yBAKzBA,EAAKxB,MALoB,2CAAH,sDAQlB4B,EAAa,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADQ,cACrBI,EADqB,yBAIpBA,EAAKxB,KAAK8B,MAJU,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACXV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADW,cACxBI,EADwB,yBAIvBA,EAAKxB,KAAKgC,SAJa,2CAAH,qD,sDCpCtB,IAAMnB,EAAe,iC","sources":["pages/MovieDetails.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchMovieDetsById } from 'services/apiService';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { BASE_IMG_URL } from 'services/constants';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieDetsById(id);\n        setMovieData(data);\n        console.log(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [id]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  if (!movieData) {\n    return (\n      <div>\n        <h1>Loadind data...</h1>\n      </div>\n    );\n  }\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <button\n        onClick={handleGoBack}\n        style={{\n          display: 'flex',\n          width: '50',\n          marginRight: 'auto',\n        }}\n      >\n        go back\n      </button>\n\n      <img\n        src={\n          movieData.poster_path\n            ? BASE_IMG_URL + movieData.poster_path\n            : require('img/smile.jpg')\n        }\n        alt=\"\"\n        width=\"200\"\n      />\n\n      <h1>Additional information</h1>\n      <NavLink\n        to=\"cast\"\n        state={{ from: location.state.from }}\n        style={{ marginLeft: '10' }}\n      >\n        cast\n      </NavLink>\n      <NavLink to=\"reviews\" state={{ from: location.state.from }}>\n        reviews\n      </NavLink>\n      <Outlet />\n      {isLoading && <Loader />}\n      {error && toast.error('Подождите...')}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3f22dcea9933d1a88e76ca43d3c13944';\n\nexport const fetchDayTrend = async (\n  endpoints = `trending/movie/day`,\n  options\n) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","movieData","setMovieData","id","useParams","location","useLocation","navigate","useNavigate","isLoading","setIsLoading","error","setError","useEffect","fetchMovieDetsById","data","console","log","style","display","flexDirection","onClick","state","from","width","marginRight","src","poster_path","BASE_IMG_URL","require","alt","to","marginLeft","toast","axios","apiKey","fetchDayTrend","endpoints","options","resp","fetchMovieByQuery","query","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo","results"],"sourceRoot":""}